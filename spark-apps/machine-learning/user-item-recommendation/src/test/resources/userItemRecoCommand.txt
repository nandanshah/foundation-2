drop keyspace if exists fis;
create keyspace if not exists fis with replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };
use fis;
create table item (id uuid,tenantid uuid,regionid uuid,localeid uuid,credits_id uuid,datecreated text,duration int,episodecount int,fidelities list<text>,fullimg text,genres_id list<uuid>,largethumbnail text,licensing_id uuid,likecnt int,likedpct double,longdesc text,moods_id list<uuid>,permissions text,progress int,recommendationreason text,reviews_id list<uuid>,seasons_id list<uuid>,shortdesc text,thumbnail text,title text,trailerurl text,type_id uuid,userrating text,viewcnt int,year int,PRIMARY KEY (id,tenantid,regionid));
create table account (id uuid,tenantid uuid,type text,PRIMARY KEY (id));
create table profile (accountid uuid,id uuid,homeregionid uuid,preferredlocaleid uuid,avatarimageurl text,birthdate timestamp,defaultcolor text,emailaddress text,emailaddress_lower text,firstname text,gender text,isadmin boolean,isrootprofile boolean,lastname text,notfiyfriendregistration boolean,notifyfriendlike boolean,notifynewrelease boolean,notifypromotional boolean,notifywatchlistexpiration boolean,passwordhash text,passwordsalt text,pinhash text,pinsalt text,profiletype text,socialauthtoken text,watchlist_id uuid,PRIMARY KEY (accountid, id));
create table trendreco(id timeuuid,tenantid uuid,regionid uuid,itemid uuid,trendscore double,normalizedtrendscore double,trendscorereason text,eventrequired int,date timestamp, primary key (id,tenantid,regionid,itemid));
create table popularity(id timeuuid,tenantid uuid,regionid uuid,itemid uuid,totalwatch double,aggratings  double,popularityscore double,normalizedpopularityscore double,popularityscorereason text,eventrequired int,date timestamp,primary key (id,tenantid,regionid,itemid));
create table fpreco(id timeuuid,tenantid uuid,regionid uuid,itemid uuid,fpscore double,normalizedfpscore double,fpscorereason text,eventrequired int,date timestamp, primary key (id,tenantid,regionid,itemid));
create table newreleasereco(id timeuuid,tenantid uuid,regionid uuid,itemid uuid,newscore double,normalizednewscore double,newscorereason text,eventrequired int,date timestamp, primary key (id,tenantid,regionid,itemid));
create table scoresummary (id timeuuid,tenantid uuid,regionid uuid,itemid uuid,trendscore double,trendscorereason text,popularityscore double,popularityscorereason text,fpscore double,fpscorereason text,newscore double,newscorereason text,eventrequired int,date timestamp,primary key (id,tenantid, regionid,itemid));
create table useritemrecommendation(id timeuuid,tenantid uuid,regionid uuid,profileid uuid,itemid uuid,trendscore double,trendscorereason text,popularityscore double,popularityscorereason text,fpscore double,fpscorereason text,newscore double,newscorereason text,socialscore double,socialscorereason text,recoByfoundation double,recoByfoundationscorereason text,eventrequired int,date timestamp,primary key (id,tenantid, regionid,itemid,profileid));
create table socialreco(id timeuuid, tenantid uuid,regionid uuid,itemid uuid, profileid uuid,socialscore double,socialscorereason text,eventrequired int,date timestamp,primary key (id,tenantid,regionid,itemid,profileid));
create table piouserreco ( tenantid uuid, regionid uuid, profileid uuid, itemid uuid ,lastrecofetched timestamp, recoByfoundation double,recoByfoundationscorereason text, eventrequired int ,PRIMARY KEY (profileid,itemid));
create index useritemrecotrenddate ON trendreco (date);
create index useritemrecotrendeventrequired ON trendreco (eventrequired);
create index useritemrecopopularityeventrequired ON popularity (eventrequired);
create index useritemrecopopularitydate ON popularity (date);
create index useritemrecofpdate ON fpreco (date);
create index useritemrecofpeventrequired ON fpreco (eventrequired);
create index useritemreconewdate ON newreleasereco (date);
create index useritemreconeweventrequired ON newreleasereco (eventrequired);
create index useritemrecosocialeventrequired ON socialreco (eventrequired);
create index useritemrecosocialdate ON socialreco (date);
create index useritemrecoscoresummaryeventrequired ON scoresummary (eventrequired);
create index useritemrecoscoresummarydate ON scoresummary (date);
create index useritemrecopioreceventrequired ON piouserreco (eventrequired);
create index useritemrecopioreclastrecofetched ON piouserreco (lastrecofetched);
insert into profile(id,accountid,homeregionid,preferredlocaleid) values(C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1);
insert into socialreco(id,tenantid,regionid,itemid,profileid,socialscore,socialscorereason,date,eventrequired) values(0a7f4400-02e0-11e4-8080-808080808080,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,0.6,'social','2014-06-30',1);
insert into account(id,tenantid) values(C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1);
insert into account(id,tenantid) values(C979CA35-B58D-434B-B2D6-EA0316BCC9A2,C979CA35-B58D-434B-B2D6-EA0316BCC9A2);
insert into item(id,tenantid,regionid,localeid) values(C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1);
insert into item(id,tenantid,regionid,localeid) values(C979CA35-B58D-434B-B2D6-EA0316BCC9A5,C979CA35-B58D-434B-B2D6-EA0316BCC9A5,C979CA35-B58D-434B-B2D6-EA0316BCC9A5,C979CA35-B58D-434B-B2D6-EA0316BCC9A1);
insert into trendreco(id,tenantid,regionid,itemid,trendscore,normalizedtrendscore,trendscorereason,eventrequired,date) values(0a7f4400-02e0-11e4-8080-808080808080,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,4,0.6,'trending',1,'2014-06-30');
insert into popularity(id,tenantid,regionid,itemid,popularityscore,normalizedpopularityscore,popularityscorereason,eventrequired,date) values(0a7f4400-02e0-11e4-8080-808080808080,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,4,0.6,'Popularity',1,'2014-06-30');
insert into fpreco(id,tenantid,regionid,itemid,fpscore,normalizedfpscore,fpscorereason,eventrequired,date) values(0a7f4400-02e0-11e4-8080-808080808080,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,4,0.6,'fp',1,'2014-06-30');
insert into newreleasereco(id,tenantid,regionid,itemid,newscore,normalizednewscore,newscorereason,eventrequired,date) values(0a7f4400-02e0-11e4-8080-808080808080,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,4,0.6,'new release',1,'2014-06-30');
insert into piouserreco(tenantid,regionid,profileid,itemid,lastrecofetched,recobyfoundation,recoByfoundationscorereason,eventrequired) values(C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,C979CA35-B58D-434B-B2D6-EA0316BCC9A1,'2014-06-30',0.6,'pio',1);
create table if not exists sparkappprop(sparkappname text, properties map<text,text>, primary key (sparkappname));
insert into sparkappprop(sparkappname,properties) values('useritemreco',{'input_date':'2014-06-30'});